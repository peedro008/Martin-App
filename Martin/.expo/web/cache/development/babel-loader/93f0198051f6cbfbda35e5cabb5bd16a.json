{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tobia\\\\Food\\\\Martin-App\\\\Martin\\\\screens\\\\Client\\\\stack\\\\products.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { IP } from \"../../../env\";\nimport { FlatList } from 'react-native-gesture-handler';\nexport default function Products(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var category = route.params.params;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cate = _useState2[0],\n      setCate = _useState2[1];\n\n  useEffect(function () {\n    axios.get(IP + \"/productsCat?id=\" + category.id).then(function (response) {\n      setCate(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    numColumns: 2,\n    data: cate,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        key: item.id,\n        onPress: function onPress() {\n          return navigation.navigate(\"ProductDetail\", {\n            id: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, React.createElement(ImageBackground, {\n        key: item.id,\n        source: {\n          uri: item.img\n        },\n        style: {\n          width: 100,\n          height: 100\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }\n      }, item.name))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"fi-content\",\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/tobia/Food/Martin-App/Martin/screens/Client/stack/products.js"],"names":["React","useState","useEffect","axios","IP","FlatList","Products","route","navigation","category","params","cate","setCate","get","id","then","response","data","catch","error","console","log","styles","container","item","toString","navigate","uri","img","width","height","name","StyleSheet","create","display","flex","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,EAAT;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAKA,eAAgB,SAAUC,QAAV,OAAyC;AAAA;;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,UAAa,QAAbA,UAAa;AACrD,MAAIC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaA,MAA5B;;AAEA,kBAAuBT,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AACAV,EAAAA,SAAS,CAAC,YAAI;AACVC,IAAAA,KAAK,CAACU,GAAN,CAAaT,EAAb,wBAAkCK,QAAQ,CAACK,EAA3C,EACKC,IADL,CACU,UAASC,QAAT,EAAkB;AACpBJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACH,KAHL,EAIKC,KAJL,CAIW,UAAAC,KAAK,EAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANL;AASH,GAVQ,EAUP,EAVO,CAAT;AAcA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,QAAD;AACA,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACV,EAAL,CAAQW,QAAR,EAAJ;AAAA,KADlB;AAEA,IAAA,UAAU,EAAE,CAFZ;AAGA,IAAA,IAAI,EAAEd,IAHN;AAIA,IAAA,UAAU,EAAE,2BAAU;AAAA,UAARa,IAAQ,SAARA,IAAQ;AAClB,aAGI,oBAAC,gBAAD;AACA,QAAA,GAAG,EAAEA,IAAI,CAACV,EADV;AACc,QAAA,OAAO,EAAE;AAAA,iBAAMN,UAAU,CAACkB,QAAX,CAAoB,eAApB,EAAoC;AAACZ,YAAAA,EAAE,EAACU,IAAI,CAACV;AAAT,WAApC,CAAN;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,eAAD;AACA,QAAA,GAAG,EAAEU,IAAI,CAACV,EADV;AAEA,QAAA,MAAM,EAAE;AAAEa,UAAAA,GAAG,EAACH,IAAI,CAACI;AAAX,SAFR;AAGA,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAON,IAAI,CAACO,IAAZ,CANF,CADA,CAFA,CAHJ;AAsBH,KA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CADJ;AAqCK;AAeT,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAC;AACNM,IAAAA,KAAK,EAAC,YADA;AAENK,IAAAA,OAAO,EAAC,MAFF;AAGNC,IAAAA,IAAI,EAAC,CAHC;AAINC,IAAAA,UAAU,EAAC;AAJL;AADmB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { StyleSheet, Text, View, TouchableOpacity, ImageBackground} from 'react-native'\r\nimport { IP } from '../../../env';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\n\r\n\r\n\r\n\r\nexport default  function  Products ({route, navigation}) {\r\n    let category = route.params.params\r\n    \r\n    const [cate, setCate]= useState([])\r\n    useEffect(()=>{\r\n        axios.get(`${IP}/productsCat?id=${category.id}`)\r\n            .then(function(response){\r\n                setCate(response.data)\r\n            })\r\n            .catch(error=>{\r\n              console.log(error)  \r\n            })\r\n    \r\n\r\n    },[])\r\n\r\n    \r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n            {\r\n                <FlatList\r\n                keyExtractor={item => item.id.toString()}\r\n                numColumns={2}\r\n                data={cate}\r\n                renderItem={({item})=>{\r\n                    return(\r\n                        \r\n                          \r\n                        <TouchableOpacity\r\n                        key={item.id} onPress={() => navigation.navigate(\"ProductDetail\",{id:item.id})}>\r\n                        <View >\r\n                        <ImageBackground\r\n                        key={item.id}\r\n                        source={{ uri:item.img}}\r\n                        style={{ width: 100, height: 100 }}     \r\n                        >\r\n                            \r\n                          <Text>{item.name}</Text>\r\n                       \r\n                          </ImageBackground>\r\n                            </View>\r\n                      </TouchableOpacity>\r\n                   \r\n                    \r\n                    \r\n                    \r\n                    )\r\n                }}\r\n                />  \r\n            }\r\n\r\n            \r\n        </View>\r\n    )\r\n        }\r\n          \r\n       \r\n      \r\n//      return  (\r\n//         <View>\r\n//             <Button\r\n//         title=\"product detail\"\r\n//         onPress={() => navigation.navigate(\"ProductDetail\")}\r\n//       />\r\n            \r\n//         </View>\r\n//     )\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        width:\"fi-content\",\r\n        display:\"flex\",\r\n        flex:1,\r\n        alignItems:\"center\"\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}