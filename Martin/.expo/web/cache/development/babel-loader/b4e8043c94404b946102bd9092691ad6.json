{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tobia\\\\Food\\\\Martin-App\\\\Martin\\\\screens\\\\Client\\\\stack\\\\products.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { IP } from \"../../../env\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { SearchBar } from 'react-native-elements';\nexport default function Products(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var category = route.params.params;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cate = _useState2[0],\n      setCate = _useState2[1];\n\n  useEffect(function () {\n    axios.get(IP + \"/productsCat?id=\" + category.id).then(function (response) {\n      setCate(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Search\"), React.createElement(SearchBar, {\n    inputContainerStyle: {\n      backgroundColor: \"white\"\n    },\n    inputStyle: {\n      backgroundColor: 'white'\n    },\n    containerStyle: {\n      backgroundColor: 'white',\n      borderWidth: 1,\n      borderRadius: 5\n    },\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Products\"), React.createElement(View, {\n    style: styles.contProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    numColumns: 2,\n    data: cate,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        key: item.id,\n        onPress: function onPress() {\n          return navigation.navigate(\"ProductDetail\", {\n            id: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.product,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, React.createElement(ImageBackground, {\n        key: item.id,\n        source: {\n          uri: item.img\n        },\n        style: {\n          flex: 1,\n          width: \"fitContent\",\n          height: 200\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }\n      }, item.name))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"fi-content\",\n    display: \"flex\",\n    flex: 1\n  },\n  text: {\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 25,\n    marginTop: 15,\n    marginBottom: 15,\n    alignSelf: \"center\"\n  },\n  contProduct: {\n    width: \"100%\",\n    backgroundColor: \"green\"\n  },\n  product: {\n    display: \"flex\",\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/tobia/Food/Martin-App/Martin/screens/Client/stack/products.js"],"names":["React","useState","useEffect","axios","IP","FlatList","SearchBar","Products","route","navigation","category","params","cate","setCate","get","id","then","response","data","catch","error","console","log","styles","container","text","backgroundColor","borderWidth","borderRadius","contProduct","item","toString","navigate","product","uri","img","flex","width","height","name","StyleSheet","create","display","fontStyle","fontWeight","fontSize","marginTop","marginBottom","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { StyleSheet, Text, View, TouchableOpacity, ImageBackground} from 'react-native'\r\nimport { IP } from '../../../env';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport { SearchBar } from 'react-native-elements';\r\n\r\n\r\n\r\nexport default  function  Products ({route, navigation}) {\r\n    let category = route.params.params\r\n    \r\n    const [cate, setCate]= useState([])\r\n    useEffect(()=>{\r\n        axios.get(`${IP}/productsCat?id=${category.id}`)\r\n            .then(function(response){\r\n                setCate(response.data)\r\n            })\r\n            .catch(error=>{\r\n              console.log(error)  \r\n            })\r\n    \r\n\r\n    },[])\r\n\r\n    \r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>Search</Text>\r\n            <SearchBar \r\n                inputContainerStyle={{backgroundColor:\"white\"}}\r\n                inputStyle={{backgroundColor: 'white'}}\r\n                containerStyle={{backgroundColor: 'white', borderWidth: 1, borderRadius: 5}}\r\n             \r\n                value={\"\"}/>\r\n                <Text style={styles.text}>Products</Text>\r\n            {  <View style={styles.contProduct}>\r\n                <FlatList\r\n                keyExtractor={item => item.id.toString()}\r\n                numColumns={2}\r\n                data={cate}\r\n                renderItem={({item})=>{\r\n                    return(\r\n                        \r\n                          \r\n                        <TouchableOpacity\r\n                        key={item.id} onPress={() => navigation.navigate(\"ProductDetail\",{id:item.id})}>\r\n                        <View style={styles.product}>\r\n                        <ImageBackground\r\n                        key={item.id}\r\n                        source={{ uri:item.img}}\r\n                        style={{flex:1, width: \"fitContent\", height:200}}     \r\n                        >\r\n                            \r\n                          <Text>{item.name}</Text>\r\n                       \r\n                          </ImageBackground>\r\n                            </View>\r\n                      </TouchableOpacity>\r\n                   \r\n                    \r\n                    \r\n                    \r\n                    )\r\n                }}\r\n                /> \r\n            </View> \r\n            }\r\n\r\n            \r\n        </View>\r\n    )\r\n        }\r\n          \r\n       \r\n      \r\n//      return  (\r\n//         <View>\r\n//             <Button\r\n//         title=\"product detail\"\r\n//         onPress={() => navigation.navigate(\"ProductDetail\")}\r\n//       />\r\n            \r\n//         </View>\r\n//     )\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        width:\"fi-content\",\r\n        display:\"flex\",\r\n        flex:1,\r\n    },\r\n    text:{\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 25,\r\n        marginTop:15,\r\n        marginBottom:15,\r\n        alignSelf:\"center\"\r\n    },\r\n    contProduct:{\r\n        width:\"100%\",\r\n        backgroundColor:\"green\"\r\n    },\r\n    product:{\r\n        display:\"flex\",\r\n        flex:1\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}