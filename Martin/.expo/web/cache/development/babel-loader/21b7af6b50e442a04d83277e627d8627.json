{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tobia\\\\App-----Martin-Food\\\\Martin-App\\\\Martin\\\\screens\\\\Client\\\\clientCart.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { plusQuantity, lessQuantity, deleteProduct, postOrder } from \"../../actions.js\";\nexport default function clientCart() {\n  var _this = this;\n\n  var order = useSelector(function (state) {\n    return state.PreOrder;\n  });\n  var user = useSelector(function (state) {\n    return state.User;\n  });\n  var totalPrice = useSelector(function (state) {\n    return state.TotalPrice;\n  });\n  var dispatch = useDispatch();\n\n  var handleDelete = function handleDelete(id) {\n    dispatch(deleteProduct(id));\n  };\n\n  var handlePostOrder = function handlePostOrder() {\n    dispatch(postOrder(order, user));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    data: order,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, React.createElement(ImageBackground, {\n        source: {\n          uri: item.img\n        },\n        style: {\n          width: 150,\n          height: 150\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, React.createElement(Button, {\n        title: \"X\",\n        onPress: function onPress() {\n          return handleDelete(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }, item.name), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, \"$\", item.price), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, \"Quantity:\"), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, item.quantity))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }), order.length > 0 ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }\n  }, \"TOTAL $\", totalPrice, \"  \"), React.createElement(Button, {\n    title: \"Confirm the purchase\",\n    onPress: function onPress() {\n      return handlePostOrder();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 72\n    }\n  })) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }\n  }, \"EMPTY\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["C:/Users/tobia/App-----Martin-Food/Martin-App/Martin/screens/Client/clientCart.js"],"names":["React","useEffect","FlatList","useDispatch","useSelector","plusQuantity","lessQuantity","deleteProduct","postOrder","clientCart","order","state","PreOrder","user","User","totalPrice","TotalPrice","dispatch","handleDelete","id","handlePostOrder","item","toString","styles","container","uri","img","width","height","name","price","quantity","length","StyleSheet","create","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { StyleSheet, Text, View,TouchableOpacity, Button,ImageBackground} from 'react-native'\r\nimport { FlatList } from 'react-native-gesture-handler'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { plusQuantity,lessQuantity,deleteProduct,postOrder} from '../../actions.js'\r\n\r\nexport default function clientCart() {\r\n    const order= useSelector(state=> state.PreOrder) \r\n    const user= useSelector(state=> state.User) \r\n    const totalPrice= useSelector(state=> state.TotalPrice) \r\n    const dispatch= useDispatch()\r\n    \r\n    \r\n    // const handlePlus=()=>{    //resto cant de un producto en cart \r\n    //     dispatch(plusQuantity())\r\n    // }\r\n    // const handleLess=(quantity)=>{   //sumo cant de un producto en cart\r\n    //     if(quantity>1){\r\n    //         dispatch(lessQuantity())\r\n    //     }\r\n    // }\r\n\r\n    const handleDelete=(id)=>{     //elimino producto del carrito de compras\r\n        dispatch(deleteProduct(id))\r\n    }\r\n\r\n    const handlePostOrder=()=>{\r\n    //    let msj=  confirm(\"Are you sure?\")\r\n    //    if(msj === true){\r\n           dispatch(postOrder(order,user))\r\n    //    }\r\n    }\r\n\r\n    \r\n    return (\r\n        <View>\r\n            {  <FlatList\r\n                keyExtractor={item => item.id.toString()}\r\n                data={order}\r\n                renderItem={({item})=>\r\n                        <View style={styles.container}>\r\n                            \r\n                            <ImageBackground source={{uri: item.img}} style={{width: 150,\r\n                            height: 150}}>\r\n                                <Button title=\"X\" onPress={()=>handleDelete(item.id)}/>\r\n                            </ImageBackground>\r\n                            {/* <Button title=\"+\" onPress={()=>handlePlus()}/>\r\n                              <Text>{el.quantity}</Text>\r\n                            <Button title=\"-\" onPress={()=> handleLess(el.quantity)} disabled={el.quantity>1 ? false : true} /> */}\r\n                            <View>\r\n                                <Text>{item.name}</Text>\r\n                                <Text>${item.price}</Text>\r\n                                <View>\r\n                                    <Text>Quantity:</Text>\r\n                                    <Text>{item.quantity}</Text>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                } \r\n            /> \r\n                    \r\n            }\r\n            {order.length>0 ? (<View><Text>TOTAL ${totalPrice}  </Text><Button title=\"Confirm the purchase\" onPress={()=>handlePostOrder()}/></View>) :\r\n             <Text>EMPTY</Text>\r\n            }\r\n           \r\n        </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n      display:\"flex\",\r\n      flexDirection:\"row\"\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}