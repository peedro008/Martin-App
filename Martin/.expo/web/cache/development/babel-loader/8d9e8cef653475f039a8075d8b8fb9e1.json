{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\pedro\\\\Desktop\\\\migrada\\\\Martin\\\\screens\\\\AuthScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport ClientNavigation from \"./Client/ClientNavigation\";\nimport { useEffect } from 'react';\nimport { logIn, userRole, User } from \"../actions\";\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nvar API_URL = 'http://192.168.0.105:5000';\n\nvar AuthScreen = function AuthScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isError = _useState8[0],\n      setIsError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isLogin = _useState12[0],\n      setIsLogin = _useState12[1];\n\n  var onChangeHandler = function onChangeHandler() {\n    setIsLogin(!isLogin);\n    setMessage('');\n  };\n\n  var onSubmitHandler = function onSubmitHandler() {\n    var payload = {\n      email: email,\n      name: name,\n      password: password\n    };\n    fetch(API_URL + \"/\" + (isLogin ? 'login' : 'signup'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(function _callee(res) {\n      var jsonRes;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 3:\n              jsonRes = _context.sent;\n\n              if (res.status !== 200) {\n                setIsError(true);\n                setMessage(jsonRes.message);\n              } else {\n                setIsError(false);\n                setMessage(jsonRes.message);\n                dispatch(userRole(jsonRes.role));\n                dispatch(User(payload.email));\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n              ;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var getMessage = function getMessage() {\n    var status = isError ? \"Error: \" : \"Success: \";\n    return status + message;\n  };\n\n  return React.createElement(View, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, isLogin ? 'Login' : 'Signup'), React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), !isLogin && React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Name\",\n    onChangeText: setName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 38\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.input,\n    placeholder: \"Password\",\n    onChangeText: setPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: [styles.message, {\n      color: isError ? 'red' : 'green'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, message ? getMessage() : null), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onSubmitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"Done\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonAlt,\n    onPress: onChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonAltText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, isLogin ? 'Sign Up' : 'Log In')))));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    width: '100%',\n    height: \"50\",\n    alignItems: 'center'\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    width: '80%',\n    marginTop: '40%',\n    borderRadius: 20,\n    maxHeight: 380,\n    paddingBottom: '30%'\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginLeft: '10%',\n    marginTop: '5%',\n    marginBottom: '30%',\n    color: 'black'\n  },\n  form: {\n    flex: 1,\n    paddingBottom: '5%'\n  },\n  inputs: {\n    width: '100%',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: '10%'\n  },\n  input: {\n    width: '80%',\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    paddingTop: 10,\n    fontSize: 16,\n    minHeight: 40\n  },\n  button: {\n    width: '80%',\n    backgroundColor: 'black',\n    height: 40,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '400'\n  },\n  buttonAlt: {\n    width: '80%',\n    borderWidth: 1,\n    height: 40,\n    borderRadius: 50,\n    borderColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonAltText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: '400'\n  },\n  message: {\n    fontSize: 16,\n    marginVertical: '5%'\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["C:/Users/pedro/Desktop/migrada/Martin/screens/AuthScreen.js"],"names":["React","useState","NavigationContainer","ClientNavigation","useEffect","logIn","userRole","User","useDispatch","useSelector","API_URL","AuthScreen","dispatch","email","setEmail","name","setName","password","setPassword","isError","setIsError","message","setMessage","isLogin","setIsLogin","onChangeHandler","onSubmitHandler","payload","fetch","method","headers","body","JSON","stringify","then","res","json","jsonRes","status","role","console","log","catch","err","getMessage","styles","card","heading","form","inputs","input","color","button","buttonText","buttonAlt","buttonAltText","StyleSheet","create","image","flex","width","height","alignItems","backgroundColor","marginTop","borderRadius","maxHeight","paddingBottom","fontSize","fontWeight","marginLeft","marginBottom","justifyContent","paddingTop","borderBottomWidth","borderBottomColor","minHeight","marginVertical","borderWidth","borderColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,gBAAP;AACA,SAASC,SAAT,QAAyB,OAAzB;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,IAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAMA,IAAMC,OAAO,GAAG,2BAAhB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAIrB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBb,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCf,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAA8BjB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOkB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BnB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOoB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAA8BrB,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOsB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAD,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAHD;;AAOA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,QAAMC,OAAO,GAAG;AACZd,MAAAA,KAAK,EAALA,KADY;AAEZE,MAAAA,IAAI,EAAJA,IAFY;AAGZE,MAAAA,QAAQ,EAARA;AAHY,KAAhB;AAKAW,IAAAA,KAAK,CAAIlB,OAAJ,UAAea,OAAO,GAAG,OAAH,GAAa,QAAnC,GAA+C;AAEhDM,MAAAA,MAAM,EAAE,MAFwC;AAGhDC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHuC;AAMhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAN0C,KAA/C,CAAL,CASCO,IATD,CASM,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEwBA,GAAG,CAACC,IAAJ,EAFxB;;AAAA;AAEQC,cAAAA,OAFR;;AAGE,kBAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACpBlB,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,gBAAAA,UAAU,CAACe,OAAO,CAAChB,OAAT,CAAV;AACH,eAHD,MAGO;AAEHD,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,gBAAAA,UAAU,CAACe,OAAO,CAAChB,OAAT,CAAV;AACAT,gBAAAA,QAAQ,CAACN,QAAQ,CAAC+B,OAAO,CAACE,IAAT,CAAT,CAAR;AACA3B,gBAAAA,QAAQ,CAACL,IAAI,CAACoB,OAAO,CAACd,KAAT,CAAL,CAAR;AACH;;AAZH;AAAA;;AAAA;AAAA;AAAA;AAcE2B,cAAAA,OAAO,CAACC,GAAR;;AAdF;AAeD;;AAfC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATN,EA2BCC,KA3BD,CA2BO,UAAAC,GAAG,EAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KA7BD;AAgCH,GAtCD;;AAwCA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAMN,MAAM,GAAGnB,OAAO,0BAAtB;AACA,WAAOmB,MAAM,GAAGjB,OAAhB;AACH,GAHD;;AAOK,SAGG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BxB,OAAO,GAAG,OAAH,GAAa,QAAlD,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAAzB;AAAgC,IAAA,WAAW,EAAC,OAA5C;AAAoD,IAAA,cAAc,EAAC,MAAnE;AAA0E,IAAA,YAAY,EAAEpC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,CAACS,OAAD,IAAY,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEsB,MAAM,CAACK,KAAzB;AAAgC,IAAA,WAAW,EAAC,MAA5C;AAAmD,IAAA,YAAY,EAAElC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjB,EAGI,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAE,IAA5B;AAAkC,IAAA,KAAK,EAAE6B,MAAM,CAACK,KAAhD;AAAuD,IAAA,WAAW,EAAC,UAAnE;AAA8E,IAAA,YAAY,EAAEhC,WAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC2B,MAAM,CAACxB,OAAR,EAAiB;AAAC8B,MAAAA,KAAK,EAAEhC,OAAO,GAAG,KAAH,GAAW;AAA1B,KAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoEE,OAAO,GAAGuB,UAAU,EAAb,GAAkB,IAA7F,CAJJ,EAKI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEC,MAAM,CAACO,MAAhC;AAAwC,IAAA,OAAO,EAAE1B,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CALJ,EAQI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAER,MAAM,CAACS,SAAhC;AAA2C,IAAA,OAAO,EAAE7B,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoChC,OAAO,GAAG,SAAH,GAAe,QAA1D,CADJ,CARJ,CADJ,CAFJ,CAHH;AAqBF,CAxFP;;AA8FA,IAAMsB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,MAAM,EAAC,IAHJ;AAIHC,IAAAA,UAAU,EAAE;AAJT,GADsB;AAQ7BhB,EAAAA,IAAI,EAAE;AACFa,IAAAA,IAAI,EAAE,CADJ;AAEFI,IAAAA,eAAe,EAAE,0BAFf;AAGFH,IAAAA,KAAK,EAAE,KAHL;AAIFI,IAAAA,SAAS,EAAE,KAJT;AAKFC,IAAAA,YAAY,EAAE,EALZ;AAMFC,IAAAA,SAAS,EAAE,GANT;AAOFC,IAAAA,aAAa,EAAE;AAPb,GARuB;AAiB7BpB,EAAAA,OAAO,EAAE;AACLqB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,UAAU,EAAE,KAHP;AAILN,IAAAA,SAAS,EAAE,IAJN;AAKLO,IAAAA,YAAY,EAAE,KALT;AAMLpB,IAAAA,KAAK,EAAE;AANF,GAjBoB;AAyB7BH,EAAAA,IAAI,EAAE;AACFW,IAAAA,IAAI,EAAE,CADJ;AAGFQ,IAAAA,aAAa,EAAE;AAHb,GAzBuB;AA8B7BlB,EAAAA,MAAM,EAAE;AACJW,IAAAA,KAAK,EAAE,MADH;AAEJD,IAAAA,IAAI,EAAE,CAFF;AAGJG,IAAAA,UAAU,EAAE,QAHR;AAIJU,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,UAAU,EAAE;AALR,GA9BqB;AAqC7BvB,EAAAA,KAAK,EAAE;AACHU,IAAAA,KAAK,EAAE,KADJ;AAEHc,IAAAA,iBAAiB,EAAE,CAFhB;AAGHC,IAAAA,iBAAiB,EAAE,OAHhB;AAIHF,IAAAA,UAAU,EAAE,EAJT;AAKHL,IAAAA,QAAQ,EAAE,EALP;AAMHQ,IAAAA,SAAS,EAAE;AANR,GArCsB;AA6C7BxB,EAAAA,MAAM,EAAE;AACJQ,IAAAA,KAAK,EAAE,KADH;AAEJG,IAAAA,eAAe,EAAE,OAFb;AAGJF,IAAAA,MAAM,EAAE,EAHJ;AAIJI,IAAAA,YAAY,EAAE,EAJV;AAKJO,IAAAA,cAAc,EAAE,QALZ;AAMJV,IAAAA,UAAU,EAAE,QANR;AAOJe,IAAAA,cAAc,EAAE;AAPZ,GA7CqB;AAsD7BxB,EAAAA,UAAU,EAAE;AACRF,IAAAA,KAAK,EAAE,OADC;AAERiB,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAtDiB;AA2D7Bf,EAAAA,SAAS,EAAE;AACPM,IAAAA,KAAK,EAAE,KADA;AAEPkB,IAAAA,WAAW,EAAE,CAFN;AAGPjB,IAAAA,MAAM,EAAE,EAHD;AAIPI,IAAAA,YAAY,EAAE,EAJP;AAKPc,IAAAA,WAAW,EAAE,OALN;AAMPP,IAAAA,cAAc,EAAE,QANT;AAOPV,IAAAA,UAAU,EAAE,QAPL;AAQPe,IAAAA,cAAc,EAAE;AART,GA3DkB;AAqE7BtB,EAAAA,aAAa,EAAE;AACXJ,IAAAA,KAAK,EAAE,OADI;AAEXiB,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,UAAU,EAAE;AAHD,GArEc;AA0E7BhD,EAAAA,OAAO,EAAE;AACL+C,IAAAA,QAAQ,EAAE,EADL;AAELS,IAAAA,cAAc,EAAE;AAFX;AA1EoB,CAAlB,CAAf;AAgFA,eAAelE,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { ImageBackground, View, Text, StyleSheet, TouchableOpacity, TextInput, Platform } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport ClientNavigation from \"./Client/ClientNavigation\"\r\nimport { useEffect} from 'react';\r\nimport {logIn, userRole, User} from \"../actions\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\n //const API_URL = Platform.OS === 'ios' ? 'http://localhost:5000' : 'http://10.0.2.2:5000';\r\nconst API_URL = 'http://192.168.0.105:5000'\r\n\r\n\r\n\r\nconst AuthScreen = () => {\r\n\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [isError, setIsError] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [isLogin, setIsLogin] = useState(true);\r\n\r\n    const onChangeHandler = () => {\r\n        setIsLogin(!isLogin);\r\n        setMessage('');\r\n    };\r\n\r\n   \r\n\r\n    const onSubmitHandler = () => {\r\n        const payload = {\r\n            email,\r\n            name,\r\n            password,\r\n        };\r\n        fetch(`${API_URL}/${isLogin ? 'login' : 'signup'}`, {\r\n            \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n            body: JSON.stringify(payload),\r\n            \r\n        })\r\n        .then(async res => { \r\n            try {\r\n                const jsonRes = await res.json();\r\n                if (res.status !== 200) {\r\n                    setIsError(true);\r\n                    setMessage(jsonRes.message);\r\n                } else {\r\n                  \r\n                    setIsError(false);\r\n                    setMessage(jsonRes.message);\r\n                    dispatch(userRole(jsonRes.role));\r\n                    dispatch(User(payload.email))\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            };\r\n        \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n       \r\n    };\r\n\r\n    const getMessage = () => {\r\n        const status = isError ? `Error: ` : `Success: `;\r\n        return status + message;\r\n    }\r\n\r\n   \r\n       \r\n         return (\r\n             \r\n        //<ImageBackground source={require('../image/logo.png')} style={styles.image}>\r\n            <View style={styles.card}>\r\n                <Text style={styles.heading}>{isLogin ? 'Login' : 'Signup'}</Text>\r\n                <View style={styles.form}>\r\n                    <View style={styles.inputs}>\r\n                        <TextInput style={styles.input} placeholder=\"Email\" autoCapitalize=\"none\" onChangeText={setEmail}></TextInput>\r\n                        {!isLogin && <TextInput style={styles.input} placeholder=\"Name\" onChangeText={setName}></TextInput>}\r\n                        <TextInput secureTextEntry={true} style={styles.input} placeholder=\"Password\" onChangeText={setPassword}></TextInput>\r\n                        <Text style={[styles.message, {color: isError ? 'red' : 'green'}]}>{message ? getMessage() : null}</Text>\r\n                        <TouchableOpacity style={styles.button} onPress={onSubmitHandler}>\r\n                            <Text style={styles.buttonText}>Done</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.buttonAlt} onPress={onChangeHandler}>\r\n                            <Text style={styles.buttonAltText}>{isLogin ? 'Sign Up' : 'Log In'}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>    \r\n                </View>\r\n            </View>\r\n        //</ImageBackground>\r\n    );}\r\n\r\n    \r\n    \r\n;\r\n\r\nconst styles = StyleSheet.create({\r\n    image: {\r\n        flex: 1,\r\n        width: '100%',\r\n        height:\"50\",\r\n        alignItems: 'center',\r\n\r\n    },  \r\n    card: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        width: '80%',\r\n        marginTop: '40%',\r\n        borderRadius: 20,\r\n        maxHeight: 380,\r\n        paddingBottom: '30%',\r\n    },\r\n    heading: {\r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        marginLeft: '10%',\r\n        marginTop: '5%',\r\n        marginBottom: '30%',\r\n        color: 'black',\r\n    },\r\n    form: {\r\n        flex: 1,\r\n        //justifyContent: 'space-between',\r\n        paddingBottom: '5%',\r\n    },\r\n    inputs: {\r\n        width: '100%',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingTop: '10%',\r\n    },  \r\n    input: {\r\n        width: '80%',\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'black',\r\n        paddingTop: 10,\r\n        fontSize: 16, \r\n        minHeight: 40,\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        backgroundColor: 'black',\r\n        height: 40,\r\n        borderRadius: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 5,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: '400'\r\n    },\r\n    buttonAlt: {\r\n        width: '80%',\r\n        borderWidth: 1,\r\n        height: 40,\r\n        borderRadius: 50,\r\n        borderColor: 'black',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 5,\r\n    },\r\n    buttonAltText: {\r\n        color: 'black',\r\n        fontSize: 16,\r\n        fontWeight: '400',\r\n    },\r\n    message: {\r\n        fontSize: 16,\r\n        marginVertical: '5%',\r\n    },\r\n});\r\n\r\nexport default AuthScreen;"]},"metadata":{},"sourceType":"module"}